version: "2"
services:
  varnish:
    build:
      context: varnish/
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - 80
    links:
      - web

  web:
    build:
      context: nginx/
    ports:
      - "80:80"
    links:
      - fpm
#      - db
    volumes_from:
      - appdata
    env_file:
      - ./staging.env
    #environment:
      #- VIRTUAL_HOST=magento2.docker
      #- VIRTUAL_PORT=80
      #- HTTPS_METHOD=noredirect

  fpm:
    hostname: fpm.magento2.docker
    build:
      context: 7.0-fpm/
    ports:
      - 9000
#    links:
#      - db
    volumes_from:
      - appdata
    env_file:
      - ./staging.env

#  db:
#    image: mariadb:10
#    ports:
#      - 3306
#    volumes_from:
#      - dbdata
#    environment:
#      - MYSQL_ROOT_PASSWORD=magento2
#      - MYSQL_DATABASE=magento2
#      - MYSQL_USER=magento2
#      - MYSQL_PASSWORD=magento2

  cli:
    hostname: cli.magento2.docker
    build:
      context: 7.0-cli/
#    links:
#      - db
    volumes:
      - ./volume/composer:/root/.composer
    volumes_from:
      - appdata
    #temp work around so we do not need to create container for every command
    entrypoint: "sleep infinity"
    env_file:
      - ./staging.env
      - ./composer.env
    environment:
      - M2SETUP_INSTALL_DB=true
      - M2SETUP_DB_HOST=db
      - M2SETUP_DB_NAME=magento2
      - M2SETUP_DB_USER=magento2
      - M2SETUP_DB_PASSWORD=magento2
      - M2SETUP_BASE_URL=http://magento2.docker/
      # - M2SETUP_SECURE_BASE_URL=https://magento2.docker/
      - M2SETUP_BACKEND_FRONTNAME=admin
      - M2SETUP_ADMIN_FIRSTNAME=Admin
      - M2SETUP_ADMIN_LASTNAME=User
      - M2SETUP_ADMIN_EMAIL=dummy@gmail.com
      - M2SETUP_ADMIN_USER=admin
      - M2SETUP_ADMIN_PASSWORD=password1
      - M2SETUP_VERSION=2.1.*
      # - M2SETUP_USE_SAMPLE_DATA=true

  cron:
    build:
      context: 7.0-cli/
    hostname: magento2-cron.docker
#    command: run-cron
#disabled cron for now
    command: "bash"
    environment:
      - ENABLE_SENDMAIL=true
    volumes_from:
      - appdata
#    links:
#      - db

  appdata:
    image: tianon/true
    volumes:
      - ./magento/magento:/var/www/magento

#  dbdata:
#    image: tianon/true
#    volumes:
#      - ./volume/mysql:/var/lib/mysql
